# Generated by Django 5.2.6 on 2025-09-25 15:05

from django.db import migrations


def create_payment_methods_for_existing_users(apps, schema_editor):
    """
    Cria m√©todos de pagamento padr√£o para todos os usu√°rios existentes no sistema
    """
    User = apps.get_model('authentication', 'User')
    PaymentMethod = apps.get_model('finance', 'PaymentMethod')

    # M√©todos de pagamento padr√£o
    default_payment_methods = [
        {
            "name": "PIX",
            "description": "Pagamento via PIX",
            "is_default": True
        },
        {
            "name": "Dinheiro",
            "description": "Pagamento em dinheiro"
        },
        {
            "name": "Cart√£o de D√©bito",
            "description": "Pagamento com cart√£o de d√©bito"
        },
        {
            "name": "Cart√£o de Cr√©dito",
            "description": "Pagamento com cart√£o de cr√©dito"
        },
        {
            "name": "Transfer√™ncia Banc√°ria",
            "description": "Transfer√™ncia entre contas banc√°rias"
        },
        {
            "name": "Boleto",
            "description": "Pagamento via boleto banc√°rio"
        },
        {
            "name": "Cheque",
            "description": "Pagamento com cheque"
        },
        {
            "name": "Vale Alimenta√ß√£o",
            "description": "Cart√£o ou vale alimenta√ß√£o"
        },
        {
            "name": "Vale Refei√ß√£o",
            "description": "Cart√£o ou vale refei√ß√£o"
        }
    ]

    users = User.objects.all()
    total_users = users.count()
    total_methods_created = 0

    print(f"üîÑ Criando m√©todos de pagamento padr√£o para {total_users} usu√°rios existentes...")

    for user in users:
        user_methods_created = 0

        # Verificar se o usu√°rio j√° tem m√©todos de pagamento
        existing_methods_count = PaymentMethod.objects.filter(user=user).count()

        if existing_methods_count == 0:
            # Criar m√©todos padr√£o para este usu√°rio
            for method_data in default_payment_methods:
                payment_method, created = PaymentMethod.objects.get_or_create(
                    user=user,
                    name=method_data['name'],
                    defaults={
                        'description': method_data['description'],
                        'is_default': method_data.get('is_default', False),
                        'is_active': True
                    }
                )

                if created:
                    user_methods_created += 1
                    total_methods_created += 1

            if user_methods_created > 0:
                print(f"‚úÖ Usu√°rio {user.username}: {user_methods_created} m√©todos criados")
        else:
            print(f"‚ÑπÔ∏è Usu√°rio {user.username}: j√° possui {existing_methods_count} m√©todos")

    print(f"üéâ Migra√ß√£o conclu√≠da! Total de {total_methods_created} m√©todos de pagamento criados.")


def reverse_payment_methods_for_existing_users(apps, schema_editor):
    """
    Remove m√©todos de pagamento padr√£o criados para usu√°rios existentes
    """
    PaymentMethod = apps.get_model('finance', 'PaymentMethod')

    # Remover apenas m√©todos com nomes padr√£o
    default_method_names = [
        "PIX", "Dinheiro", "Cart√£o de D√©bito", "Cart√£o de Cr√©dito",
        "Transfer√™ncia Banc√°ria", "Boleto", "Cheque",
        "Vale Alimenta√ß√£o", "Vale Refei√ß√£o"
    ]

    deleted_count = 0
    for method_name in default_method_names:
        methods_to_delete = PaymentMethod.objects.filter(
            name=method_name,
            user__isnull=False  # Apenas m√©todos com usu√°rio espec√≠fico
        )
        count = methods_to_delete.count()
        methods_to_delete.delete()
        deleted_count += count

    print(f"üîÑ Rollback: {deleted_count} m√©todos de pagamento removidos.")


class Migration(migrations.Migration):

    dependencies = [
        ('finance', '0003_auto_20250925_1155'),
        ('authentication', '0001_initial'),  # Depend√™ncia do modelo User
    ]

    operations = [
        migrations.RunPython(
            create_payment_methods_for_existing_users,
            reverse_payment_methods_for_existing_users
        ),
    ]
